// In this exapmle code we are parsing string to look like same in all cases , we had some bad rough structured strings we have updated them in the same syntax

parseIngredients(){
        const unitsLong=['tablespoons','tablespoon','ounces','ounce','teaspoons','teaspoon','cups','pounds'];
        const unitsShort=['tbsp','tbsp','oz','oz','tsp','tsp','cup','pound'];
        const newIngredients=this.ingredients.map(el => {
            // uniform units
            let ingredient=el.toLowerCase();
            unitsLong.forEach((unit,i) => {
                ingredient=ingredient.replace(unit,unitsShort[i]);
            })

            //remove paranthesis and data inside ()
            ingredient=ingredient.replace(/ *\([^)]*\) */g, ' ');

            // parse ingredients into count,unit and ingredient.
            const arrIng=ingredient.split(' ');
            const unitIndex=arrIng.findIndex(el2 => unitsShort.includes(el2));

            let objIng;
            if(unitIndex > -1){
                // There is a unit
                // Ex. 4 1/2 cups, arrCount=[4,1/2]
                // Ex. 4 cups , arrCount=[4]
                const arrCount=arrIng.slice(0,unitIndex);

                let count;
                if(arrCount.length === 1){
                    count=eval(arrIng[0].replace('-','+'));
                }
                else{
                    count=eval(arrIng.slice(0,unitIndex).join('+')); // --> eval(4+1/2)=4.5
                }
                objIng={
                    count,
                    unit:arrIng[unitIndex],
                    ingredient:arrIng.slice(unitIndex+1).join(' ')
                }
            }else if(parseInt(arrIng[0],10)){
                // There is no unit but first element is number
                objIng={
                    count:parseInt(arrIng[0],10),
                    unit:'',
                    ingredient:arrIng.slice(1).join(' ')
                }
            } else if (unitIndex === -1){
                // There is no unit and no number in first place
                objIng={
                    count:1,
                    unit:'',
                    ingredient
                }
            }

            return objIng;


        });
        this.ingredients=newIngredients;
    }