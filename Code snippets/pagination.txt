const createButton = (page,type) => `
    <button class="btn-inline results__btn--${type}" data-goto=${type === 'prev' ? page - 1 :page + 1}>
        <span>Page ${type === 'prev' ? page - 1 :page + 1}</span>
        <svg class="search__icon">
            <use href="img/icons.svg#icon-triangle-${type === 'prev' ? 'left' :'right'}"></use>
        </svg>
    </button>

`;
const renderButtons = (page,numOfRes,resPerPage) => {
    let button;
    const pages = Math.ceil(numOfRes / resPerPage);
    if (page === 1 && pages > 1){
        // only display next page button
        button = createButton(page,'next');
    } else if (page < pages){
        // display both buttons
        button = `${createButton(page,'prev')}
                ${createButton(page,'next')}
        `;
    } else if (page === pages &&  pages>1){
        // only display prev page button
        button = createButton(page,'prev');
    }
    elements.searchResPages.insertAdjacentHTML('afterbegin',button)
};

export const renderResults= (recipes,page=1,resPerPage=10) =>{
    // render results of current page
    const start = (page-1)*resPerPage;
    const end = page*resPerPage;
    recipes.slice(start,end).forEach(renderRecipe);

    // render pagination buttons
    renderButtons(page,recipes.length,resPerPage);
};